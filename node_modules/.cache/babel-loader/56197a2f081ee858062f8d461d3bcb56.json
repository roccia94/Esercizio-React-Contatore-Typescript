{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/edoardo/Scrivania/REACT JS/Contatore-Typescript/src/componente/Contatore.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useState } from \"react\";\nimport ShowCounterData from \"./ShowCounterData\";\n\nconst Contatore = ({\n  valueStart\n}) => {\n  _s();\n\n  // Sintassi per inizializzare value start a number\n  const [counter, setCounter] = useState(valueStart);\n  const increment = useCallback(() => {\n    setCounter(counter + 1);\n  }, [counter, setCounter]);\n\n  const decrease = () => {\n    setCounter(counter - 1);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      increment();\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [increment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'contenitore',\n    children: [/*#__PURE__*/_jsxDEV(ShowCounterData, {\n      counterValue: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'più',\n      onClick: increment,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'meno',\n      disabled: counter <= 0,\n      onClick: decrease,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this); // counter <= 0 è un controllo se è > o <= 0 per restituire il valore corretto a disabled sennò typescript non lo convalida.\n};\n\n_s(Contatore, \"Go7ty1XQtNBHjGaHUkEWLIN5eMM=\");\n\n_c = Contatore;\nexport default Contatore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contatore\");","map":{"version":3,"sources":["/home/edoardo/Scrivania/REACT JS/Contatore-Typescript/src/componente/Contatore.tsx"],"names":["React","useEffect","useCallback","useState","ShowCounterData","Contatore","valueStart","counter","setCounter","increment","decrease","interval","setInterval","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,WAA1B,QAA4C,OAA5C;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAMA,MAAMC,SAAqC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAAI;AAChE,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBL,QAAQ,CAASG,UAAT,CAAvC;AACA,QAAMG,SAAS,GAAGP,WAAW,CAAC,MAAM;AAChCM,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAF4B,EAE1B,CAACA,OAAD,EAAUC,UAAV,CAF0B,CAA7B;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACnBF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BH,MAAAA,SAAS;AACZ,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,WAAO,MAAM;AACTI,MAAAA,aAAa,CAACF,QAAD,CAAb;AACH,KAFD;AAGH,GARQ,EAQN,CAACF,SAAD,CARM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAE,KAAnB;AAA0B,MAAA,OAAO,EAAGE,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAE,MAAnB;AAA2B,MAAA,QAAQ,EAAGF,OAAO,IAAI,CAAjD;AAAsD,MAAA,OAAO,EAAGG,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CArB4D,CA6B5D;AACH,CA9BD;;GAAML,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useCallback} from \"react\";\nimport {useState} from \"react\";\nimport ShowCounterData from \"./ShowCounterData\";\n\ninterface IComponentProps{\n    valueStart: number;\n}\n\nconst Contatore : React.FC<IComponentProps> = ({valueStart}) => {   // Sintassi per inizializzare value start a number\n    const [ counter, setCounter] = useState<number>(valueStart);\n    const increment = useCallback(() => {\n        setCounter(counter + 1);\n    }, [counter, setCounter]);\n\n    const decrease = () => {\n        setCounter(counter - 1);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            increment();\n        }, 5000);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, [increment])\n\n\n    return (\n        <div className={'contenitore'}>\n            <ShowCounterData counterValue={counter} />\n            <button className={'più'} onClick={ increment }>+</button>\n            <button className={'meno'} disabled={ counter <= 0 }  onClick={ decrease }>-</button>\n        </div>\n    );\n\n    // counter <= 0 è un controllo se è > o <= 0 per restituire il valore corretto a disabled sennò typescript non lo convalida.\n}\n\nexport default Contatore;"]},"metadata":{},"sourceType":"module"}