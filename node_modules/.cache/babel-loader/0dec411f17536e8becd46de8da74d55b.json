{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/edoardo/Scrivania/REACT JS/esercizio-contatore-typescript/src/componente/Contatore.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ShowCounterData from \"./ShowCounterData\";\n\nconst Contatore = ({\n  valueStart\n}) => {\n  _s();\n\n  // Sintassi per inizializzare value start a number\n  const [counter, setCounter] = useState(valueStart);\n\n  const increment = () => {\n    setCounter(counter + 1);\n  };\n\n  const decrease = () => {\n    setCounter(counter - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'contenitore',\n    children: [/*#__PURE__*/_jsxDEV(ShowCounterData, {\n      counterValue: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'più',\n      onClick: increment,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'meno',\n      disabled: counter <= 0,\n      onClick: decrease,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this); // counter <= 0 è un controllo se è > o <= 0 per restituire il valore corretto a disabled sennò typescript non lo convalida.\n};\n\n_s(Contatore, \"QZCFeGA7cTnp1YqEoJUHJ3kw3x8=\");\n\n_c = Contatore;\nexport default Contatore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contatore\");","map":{"version":3,"sources":["/home/edoardo/Scrivania/REACT JS/esercizio-contatore-typescript/src/componente/Contatore.tsx"],"names":["React","useState","ShowCounterData","Contatore","valueStart","counter","setCounter","increment","decrease"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAMA,MAAMC,SAAqC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAAI;AAChE,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBL,QAAQ,CAASG,UAAT,CAAvC;;AACA,QAAMG,SAAS,GAAG,MAAM;AACpBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIA,QAAMG,QAAQ,GAAG,MAAM;AACnBF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAE,KAAnB;AAA0B,MAAA,OAAO,EAAGE,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAE,MAAnB;AAA2B,MAAA,QAAQ,EAAGF,OAAO,IAAI,CAAjD;AAAsD,MAAA,OAAO,EAAGG,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAV4D,CAkB5D;AACH,CAnBD;;GAAML,S;;KAAAA,S;AAqBN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport {useState} from \"react\";\nimport ShowCounterData from \"./ShowCounterData\";\n\ninterface IComponentProps{\n    valueStart: number;\n}\n\nconst Contatore : React.FC<IComponentProps> = ({valueStart}) => {   // Sintassi per inizializzare value start a number\n    const [ counter, setCounter] = useState<number>(valueStart);\n    const increment = () => {\n        setCounter(counter + 1);\n    }\n\n    const decrease = () => {\n        setCounter(counter - 1);\n    }\n\n    return (\n        <div className={'contenitore'}>\n            <ShowCounterData counterValue={counter} />\n            <button className={'più'} onClick={ increment }>+</button>\n            <button className={'meno'} disabled={ counter <= 0 }  onClick={ decrease }>-</button>\n        </div>\n    );\n\n    // counter <= 0 è un controllo se è > o <= 0 per restituire il valore corretto a disabled sennò typescript non lo convalida.\n}\n\nexport default Contatore;"]},"metadata":{},"sourceType":"module"}